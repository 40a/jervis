apply plugin: 'groovy'
apply plugin: 'cobertura'
apply from: 'file:groovydoc.gradle'

group = 'net.gleske'
jar.baseName = 'jervis'
version = '0.1.0-SNAPSHOT'

buildscript {
    repositories { mavenCentral() }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:1.2.1" //latest cobertura version that works with gradle 1.4
        classpath "org.codehaus.groovy:groovy-all:1.8.9"
        classpath "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
        classpath "org.yaml:snakeyaml:1.14"
    }
}

repositories { mavenCentral() }
dependencies {
    compile 'org.codehaus.groovy:groovy-all:1.8.9'
    compile 'org.yaml:snakeyaml:1.14'
    testCompile 'junit:junit:4.11'
    testCompile "org.codehaus.groovy:groovy:1.8.9"
    testCompile 'org.yaml:snakeyaml:1.14'
}

sourceSets {
    main {
        groovy {
            srcDir 'src/main'
        }
        resources {
            srcDir 'src/resources'
        }
    }

    test {
        groovy {
            srcDir 'src/test'
        }
        resources {
            srcDirs = ['src/resources', 'src/testResources']
        }
    }
}

test {
  // show standard out and standard error of the test JVM(s) on the console
  testLogging.showStandardStreams = true

  // set heap size for the test JVM(s)
  minHeapSize = "128m"
  maxHeapSize = "512m"

  // set JVM arguments for the test JVM(s)
  jvmArgs '-XX:MaxPermSize=256m'

  // listen to events in the test execution lifecycle
  beforeTest { descriptor ->
     logger.lifecycle("Running test: " + descriptor)
  }

  // listen to standard out and standard error of the test JVM(s)
  onOutput { descriptor, event ->
     logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
  }
}

//http://jdpgrailsdev.github.io/blog/2014/04/29/gradle_cobertura.html
cobertura {
    coverageFormats = ['html', 'xml']
    coverageIgnoreTrivial = true
    coverageIgnores = ['org.slf4j.Logger.*']
    coverageReportDir = new File("$buildDir/reports/cobertura")
    coverageExcludes = ['.*package-info.*', '.*jervis\\.exceptions\\..*']
}
